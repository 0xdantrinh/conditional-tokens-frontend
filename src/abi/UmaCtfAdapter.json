{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "_ctf", "type": "address", "internalType": "address" },
        { "name": "_finder", "type": "address", "internalType": "address" },
        { "name": "_oo", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_ANCILLARY_DATA",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SAFETY_PERIOD",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "YES_OR_NO_IDENTIFIER",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addAdmin",
      "inputs": [{ "name": "admin", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "admins",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "collateralWhitelist",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract IAddressWhitelist" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ctf",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract IConditionalTokens" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "flag",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getExpectedPayouts",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [{ "name": "", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLatestUpdate",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "internalType": "bytes32" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct AncillaryDataUpdate",
          "components": [
            { "name": "timestamp", "type": "uint256", "internalType": "uint256" },
            { "name": "update", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getQuestion",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct QuestionData",
          "components": [
            { "name": "requestTimestamp", "type": "uint256", "internalType": "uint256" },
            { "name": "reward", "type": "uint256", "internalType": "uint256" },
            { "name": "proposalBond", "type": "uint256", "internalType": "uint256" },
            { "name": "liveness", "type": "uint256", "internalType": "uint256" },
            { "name": "manualResolutionTimestamp", "type": "uint256", "internalType": "uint256" },
            { "name": "resolved", "type": "bool", "internalType": "bool" },
            { "name": "paused", "type": "bool", "internalType": "bool" },
            { "name": "reset", "type": "bool", "internalType": "bool" },
            { "name": "refund", "type": "bool", "internalType": "bool" },
            { "name": "rewardToken", "type": "address", "internalType": "address" },
            { "name": "creator", "type": "address", "internalType": "address" },
            { "name": "ancillaryData", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUpdates",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "internalType": "bytes32" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct AncillaryDataUpdate[]",
          "components": [
            { "name": "timestamp", "type": "uint256", "internalType": "uint256" },
            { "name": "update", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "ancillaryData", "type": "bytes", "internalType": "bytes" },
        { "name": "rewardToken", "type": "address", "internalType": "address" },
        { "name": "reward", "type": "uint256", "internalType": "uint256" },
        { "name": "proposalBond", "type": "uint256", "internalType": "uint256" },
        { "name": "liveness", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isAdmin",
      "inputs": [{ "name": "addr", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isFlagged",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isInitialized",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "optimisticOracle",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IOptimisticOracleV2" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "postUpdate",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "internalType": "bytes32" },
        { "name": "update", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "priceDisputed",
      "inputs": [
        { "name": "", "type": "bytes32", "internalType": "bytes32" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "ancillaryData", "type": "bytes", "internalType": "bytes" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "questions",
      "inputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [
        { "name": "requestTimestamp", "type": "uint256", "internalType": "uint256" },
        { "name": "reward", "type": "uint256", "internalType": "uint256" },
        { "name": "proposalBond", "type": "uint256", "internalType": "uint256" },
        { "name": "liveness", "type": "uint256", "internalType": "uint256" },
        { "name": "manualResolutionTimestamp", "type": "uint256", "internalType": "uint256" },
        { "name": "resolved", "type": "bool", "internalType": "bool" },
        { "name": "paused", "type": "bool", "internalType": "bool" },
        { "name": "reset", "type": "bool", "internalType": "bool" },
        { "name": "refund", "type": "bool", "internalType": "bool" },
        { "name": "rewardToken", "type": "address", "internalType": "address" },
        { "name": "creator", "type": "address", "internalType": "address" },
        { "name": "ancillaryData", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ready",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeAdmin",
      "inputs": [{ "name": "admin", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceAdmin",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "reset",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "resolve",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "resolveManually",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "internalType": "bytes32" },
        { "name": "payouts", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unflag",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [{ "name": "questionID", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updates",
      "inputs": [
        { "name": "", "type": "bytes32", "internalType": "bytes32" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "timestamp", "type": "uint256", "internalType": "uint256" },
        { "name": "update", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AncillaryDataUpdated",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "update", "type": "bytes", "indexed": false, "internalType": "bytes" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NewAdmin",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newAdminAddress", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "QuestionFlagged",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "QuestionInitialized",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        {
          "name": "requestTimestamp",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        { "name": "creator", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "ancillaryData", "type": "bytes", "indexed": false, "internalType": "bytes" },
        { "name": "rewardToken", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "reward", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "proposalBond", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "QuestionManuallyResolved",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        { "name": "payouts", "type": "uint256[]", "indexed": false, "internalType": "uint256[]" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "QuestionPaused",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "QuestionReset",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "QuestionResolved",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        { "name": "settledPrice", "type": "int256", "indexed": true, "internalType": "int256" },
        { "name": "payouts", "type": "uint256[]", "indexed": false, "internalType": "uint256[]" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "QuestionUnflagged",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "QuestionUnpaused",
      "inputs": [
        { "name": "questionID", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RemovedAdmin",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "removedAdmin", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "Flagged", "inputs": [] },
    { "type": "error", "name": "Initialized", "inputs": [] },
    { "type": "error", "name": "InvalidAncillaryData", "inputs": [] },
    { "type": "error", "name": "InvalidOOPrice", "inputs": [] },
    { "type": "error", "name": "InvalidPayouts", "inputs": [] },
    { "type": "error", "name": "NotAdmin", "inputs": [] },
    { "type": "error", "name": "NotFlagged", "inputs": [] },
    { "type": "error", "name": "NotInitialized", "inputs": [] },
    { "type": "error", "name": "NotOptimisticOracle", "inputs": [] },
    { "type": "error", "name": "NotReadyToResolve", "inputs": [] },
    { "type": "error", "name": "Paused", "inputs": [] },
    { "type": "error", "name": "PriceNotAvailable", "inputs": [] },
    { "type": "error", "name": "Resolved", "inputs": [] },
    { "type": "error", "name": "SafetyPeriodNotPassed", "inputs": [] },
    { "type": "error", "name": "SafetyPeriodPassed", "inputs": [] },
    { "type": "error", "name": "UnsupportedToken", "inputs": [] }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "993:20559:42:-:0;;;2561:304;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;408:10:54;401:6;:18;;;;;;;;;;;;422:1;401:22;;-1:-1:-1;;;;;2627:30:42;;;;;2710:43;;;;;2803:54;;-1:-1:-1;;;2803:54:42;;806:21:64;2803:54:42;;;788:40:64;2692:7:42;;2803:31;;;;;761:18:64;;2803:54:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2763:95:42;;;-1:-1:-1;993:20559:42;;-1:-1:-1;;;993:20559:42;14:177:64;93:13;;-1:-1:-1;;;;;135:31:64;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;839:208::-;909:6;962:2;950:9;941:7;937:23;933:32;930:52;;;978:1;975;968:12;930:52;1001:40;1031:9;1001:40;:::i;:::-;991:50;839:208;-1:-1:-1;;;839:208:64:o;:::-;993:20559:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "993:20559:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;707:307:55;;;;;;:::i;:::-;;:::i;:::-;;7807:943:42;;;;;;:::i;:::-;;:::i;743:135:54:-;;;;;;:::i;:::-;;:::i;4596:1197:42:-;;;;;;:::i;:::-;;:::i;:::-;;;3247:25:64;;;3235:2;3220:18;4596:1197:42;;;;;;;;1396:53;;;;;;;;-1:-1:-1;;;;;3476:32:64;;;3458:51;;3446:2;3431:18;1396:53:42;3283:232:64;1316:39:42;;;;;1180:101:54;;;;;;:::i;:::-;-1:-1:-1;;;;;1257:12:54;1234:4;1257:12;;;;;;;;;;;1273:1;1257:17;;1180:101;;;;4017:14:64;;4010:22;3992:41;;3980:2;3965:18;1180:101:54;3852:187:64;1946:49:42;;1991:4;1946:49;;13257:279;;;;;;:::i;:::-;;:::i;6948:663::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;228:41:54:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;1202:179:55;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9363:130:42:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6356:452::-;;;;;;:::i;:::-;;:::i;1778:64::-;;-1:-1:-1;;;1778:64:42;;514:128:54;;;;;;:::i;:::-;;:::i;9818:468:42:-;;;;;;:::i;:::-;;:::i;11928:736::-;;;;;;:::i;:::-;;:::i;10413:546::-;;;;;;:::i;:::-;;:::i;362:56:55:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;943:134:54:-;;;:::i;2056:49:42:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;9121:123::-;;;;;;:::i;:::-;;:::i;1575:359:55:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1636:47:42:-;;1676:7;1636:47;;1493:54;;;;;11195:510;;;;;;:::i;:::-;;:::i;12795:329::-;;;;;;:::i;:::-;;:::i;8858:131::-;;;;;;:::i;:::-;;:::i;5917:115::-;;;;;;:::i;:::-;;:::i;707:307:55:-;810:34;;;;;;11735:25:64;;;833:10:55;11776:18:64;;;11769:60;;;;787:10:55;;11708:18:64;;810:34:55;;;-1:-1:-1;;810:34:55;;;;;;;;;800:45;;810:34;800:45;;;;855:11;;;;:7;:11;;;;;;872:67;;;;;;905:15;872:67;;;;;;;;855:85;;;;;;;;;;;;;;;;;;;;;;;;;;800:45;;-1:-1:-1;855:85:55;;;;;;;;:::i;:::-;;;;988:10;-1:-1:-1;;;;;955:52:55;976:10;955:52;1000:6;955:52;;;;;;:::i;:::-;;;;;;;;777:237;707:307;;:::o;7807:943:42:-;2158:10;-1:-1:-1;;;;;2180:16:42;2158:39;;2154:73;;2206:21;;-1:-1:-1;;;2206:21:42;;;;;;;;;;;2154:73;7946:24;;::::1;::::0;;::::1;::::0;;;;7925:18:::1;8016:21:::0;;;:9:::1;:21:::0;;;;;;;8255::::1;::::0;::::1;::::0;::::1;;8251:165;;;8317:24;::::0;::::1;::::0;8343:20:::1;::::0;::::1;::::0;;8365:19;::::1;::::0;8292:93:::1;::::0;-1:-1:-1;;;;;8317:24:42;;;::::1;::::0;::::1;::::0;8343:20:::1;::::0;8292:24:::1;:93::i;:::-;8399:7;;;;8251:165;8430:18;::::0;::::1;::::0;;;::::1;;;8426:95;;;8464:19;;:26:::0;;-1:-1:-1;;8464:26:42::1;::::0;::::1;::::0;;-1:-1:-1;8504:7:42::1;;8426:95;8689:54;8704:4;8711:10;8723:5;8730:12;8689:6;:54::i;:::-;7915:835;;2237:1;7807:943:::0;;;;:::o;743:135:54:-;318:10;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;-1:-1:-1;;;343:10:54;;;;;;;;;;;307:46;-1:-1:-1;;;;;808:13:54;::::1;824:1;808:13:::0;;;::::1;::::0;;;;;;;:17;;;840:31;853:10:::1;::::0;840:31:::1;::::0;::::1;743:135:::0;:::o;4596:1197:42:-;4820:46;;-1:-1:-1;;;4820:46:42;;-1:-1:-1;;;;;3476:32:64;;;4820:46:42;;;3458:51:64;4785:18:42;;4820:19;:33;;;;;;3431:18:64;;4820:46:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4815:78;;4875:18;;-1:-1:-1;;;4875:18:42;;;;;;;;;;;4815:78;4904:17;4924:64;4962:10;4974:13;4924:37;:64::i;:::-;4904:84;;5002:13;:20;5026:1;5002:25;:61;;;;1991:4;5031;:11;:32;5002:61;4998:96;;;5072:22;;-1:-1:-1;;;5072:22:42;;;;;;;;;;;4998:96;5128:4;5118:15;;;;;;5105:28;;5148:37;5163:9;:21;5173:10;5163:21;;;;;;;;;;;5148:14;:37::i;:::-;5144:63;;;5194:13;;-1:-1:-1;;;5194:13:42;;;;;;;;;;;5144:63;5238:15;5318:99;5332:10;5344;5356:4;5238:15;5373:11;5386:6;5394:12;5408:8;5318:13;:99::i;:::-;5471:50;;-1:-1:-1;;;5471:50:42;;5500:4;5471:50;;;15439:51:64;15506:18;;;15499:34;;;5519:1:42;15549:18:64;;;15542:34;5471:3:42;-1:-1:-1;;;;;5471:20:42;;;;15412:18:64;;5471:50:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5588:87;5602:10;5614:9;5625:4;5631:11;5644:6;5652:12;5666:8;5588:13;:87::i;:::-;5734:10;-1:-1:-1;;;;;5691:95:42;5723:9;5711:10;5691:95;5746:4;5752:11;5765:6;5773:12;5691:95;;;;;;;;;:::i;:::-;;;;;;;;4805:988;;4596:1197;;;;;;;:::o;13257:279::-;318:10:54;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;-1:-1:-1;;;343:10:54;;;;;;;;;;;307:46;13323:33:42::1;13359:21:::0;;;:9:::1;:21;::::0;;;;13395:28:::1;13359:21:::0;13395:14:::1;:28::i;:::-;13390:58;;13432:16;;-1:-1:-1::0;;;13432:16:42::1;;;;;;;;;;;13390:58;13459:19;::::0;::::1;:27:::0;;-1:-1:-1;;13459:27:42::1;::::0;;13501:28:::1;::::0;13518:10;;13501:28:::1;::::0;13481:5:::1;::::0;13501:28:::1;13313:223;13257:279:::0;:::o;6948:663::-;7045:33;7081:21;;;:9;:21;;;;;7017:16;;7118:28;7081:21;7118:14;:28::i;:::-;7113:58;;7155:16;;-1:-1:-1;;;7155:16:42;;;;;;;;;;;7113:58;20035:38;;;;:42;7181:46;;7218:9;;-1:-1:-1;;;7218:9:42;;;;;;;;;;;7181:46;7241:19;;;;;;;;;7237:40;;;7269:8;;-1:-1:-1;;;7269:8:42;;;;;;;;;;;7237:40;7293:23;7303:12;7293:9;:23::i;:::-;7288:56;;7325:19;;-1:-1:-1;;;7325:19:42;;;;;;;;;;;7288:56;7481:29;;7403:145;;-1:-1:-1;;;7403:145:42;;7388:12;;-1:-1:-1;;;;;7403:16:42;:27;;;;:145;;7452:4;;-1:-1:-1;;;7459:20:42;7512:26;;;;7403:145;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:159;;;7388:174;;7580:24;7598:5;7580:17;:24::i;:::-;7573:31;6948:663;-1:-1:-1;;;;6948:663:42:o;1202:179:55:-;1278:28;1325:7;:49;1354:10;1366:5;1343:29;;;;;;;;11735:25:64;;;-1:-1:-1;;;;;11796:32:64;11791:2;11776:18;;11769:60;11723:2;11708:18;;11561:274;1343:29:55;;;;;;;;;;;;;1333:40;;;;;;1325:49;;;;;;;;;;;1318:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1202:179;;;;;:::o;9363:130:42:-;9427:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9427:19:42;9465:21;;;;:9;:21;;;;;;;;;9458:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9458:28:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9363:130;;;:::o;6356:452::-;6412:33;6448:21;;;:9;:21;;;;;6485:28;6448:21;6485:14;:28::i;:::-;6480:58;;6522:16;;-1:-1:-1;;;6522:16:42;;;;;;;;;;;6480:58;6552:19;;;;;;;;;6548:40;;;6580:8;;-1:-1:-1;;;6580:8:42;;;;;;;;;;;6548:40;6602:21;;;;;;6598:44;;;6632:10;;-1:-1:-1;;;6632:10:42;;;;;;;;;;;6598:44;6657:23;6667:12;6657:9;:23::i;:::-;6652:56;;6689:19;;-1:-1:-1;;;6689:19:42;;;;;;;;;;;6652:56;6767:34;6776:10;6788:12;6767:8;:34::i;:::-;6760:41;6356:452;:::o;514:128:54:-;318:10;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;-1:-1:-1;;;343:10:54;;;;;;;;;;;307:46;-1:-1:-1;;;;;576:13:54;::::1;:6;:13:::0;;;::::1;::::0;;;;;;;592:1:::1;576:17:::0;;608:27;617:10:::1;::::0;608:27:::1;::::0;::::1;514:128:::0;:::o;9818:468:42:-;318:10:54;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;-1:-1:-1;;;343:10:54;;;;;;;;;;;307:46;9881:33:42::1;9917:21:::0;;;:9:::1;:21;::::0;;;;9954:28:::1;9917:21:::0;9954:14:::1;:28::i;:::-;9949:58;;9991:16;;-1:-1:-1::0;;;9991:16:42::1;;;;;;;;;;;9949:58;20035:38:::0;;;;:42;10017:46:::1;;10054:9;;-1:-1:-1::0;;;10054:9:42::1;;;;;;;;;;;10017:46;10077:21;::::0;::::1;::::0;::::1;;10073:44;;;10107:10;;-1:-1:-1::0;;;10107:10:42::1;;;;;;;;;;;10073:44;10169:31;1676:7;10169:15;:31;:::i;:::-;10128:38;::::0;::::1;:72:::0;10210:19:::1;::::0;::::1;:26:::0;;-1:-1:-1;;10210:26:42::1;;;::::0;;10252:27:::1;::::0;10268:10;;10252:27:::1;::::0;10210:26;;10252:27:::1;9871:415;9818:468:::0;:::o;11928:736::-;318:10:54;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;-1:-1:-1;;;343:10:54;;;;;;;;;;;307:46;12030:33:42::1;12066:21:::0;;;:9:::1;:21;::::0;;;;12103:28:::1;12123:7:::0;;12103:19:::1;:28::i;:::-;12098:58;;12140:16;;-1:-1:-1::0;;;12140:16:42::1;;;;;;;;;;;12098:58;12171:28;12186:12;12171:14;:28::i;:::-;12166:58;;12208:16;;-1:-1:-1::0;;;12208:16:42::1;;;;;;;;;;;12166:58;20035:38:::0;;;;12234:50:::1;;12272:12;;-1:-1:-1::0;;;12272:12:42::1;;;;;;;;;;;12234:50;12316:12;:38;;;12298:15;:56;12294:92;;;12363:23;;-1:-1:-1::0;;;12363:23:42::1;;;;;;;;;;;12294:92;12397:21;::::0;::::1;:28:::0;;-1:-1:-1;;12397:28:42::1;12421:4;12397:28;::::0;;;;12506:19;;::::1;12397:28;12506:19;12502:46;;;12527:21;12535:12;12527:7;:21::i;:::-;12559:38;::::0;-1:-1:-1;;;12559:38:42;;-1:-1:-1;;;;;12559:3:42::1;:17;::::0;::::1;::::0;:38:::1;::::0;12577:10;;12589:7;;;;12559:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12637:10;12612:45;12649:7;;12612:45;;;;;;;:::i;:::-;;;;;;;;12020:644;11928:736:::0;;;:::o;10413:546::-;318:10:54;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;-1:-1:-1;;;343:10:54;;;;;;;;;;;307:46;10478:33:42::1;10514:21:::0;;;:9:::1;:21;::::0;;;;10551:28:::1;10514:21:::0;10551:14:::1;:28::i;:::-;10546:58;;10588:16;;-1:-1:-1::0;;;10588:16:42::1;;;;;;;;;;;10546:58;20035:38:::0;;;;10614:50:::1;;10652:12;;-1:-1:-1::0;;;10652:12:42::1;;;;;;;;;;;10614:50;10678:21;::::0;::::1;::::0;::::1;;10674:44;;;10708:10;;-1:-1:-1::0;;;10708:10:42::1;;;;;;;;;;;10674:44;10750:12;:38;;;10732:15;:56;10728:89;;;10797:20;;-1:-1:-1::0;;;10797:20:42::1;;;;;;;;;;;10728:89;10869:1;10828:38;::::0;::::1;:42:::0;;;10880:19:::1;::::0;::::1;:27:::0;;-1:-1:-1;;10880:27:42::1;::::0;;10923:29:::1;::::0;10941:10;;10923:29:::1;::::0;::::1;10468:491;10413:546:::0;:::o;362:56:55:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;943:134:54:-;318:10;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;-1:-1:-1;;;343:10:54;;;;;;;;;;;307:46;1004:10:::1;1018:1;997:18:::0;;;::::1;::::0;;;;;;;:22;;;1034:36;1004:10;;1034:36:::1;::::0;::::1;943:134::o:0;2056:49:42:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2056:49:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9121:123::-;9181:4;9215:21;;;:9;:21;;;;;20035:38;;;:42;;9204:33;19934:150;1575:359:55;-1:-1:-1;;;;;;;;;;;;;;;;;1696:43:55;1742:29;1753:10;1765:5;1742:10;:29::i;:::-;1696:75;;1785:14;:21;1810:1;1785:26;1781:88;;1820:49;;;;;;;;1853:1;1820:49;;;;;;;;;;;;;;;;;;;1813:56;;;;;1781:88;1886:14;1925:1;1901:14;:21;:25;;;;:::i;:::-;1886:41;;;;;;;;:::i;:::-;;;;;;;1879:48;;;1575:359;;;;:::o;11195:510:42:-;318:10:54;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;-1:-1:-1;;;343:10:54;;;;;;;;;;;307:46;11259:33:42::1;11295:21:::0;;;:9:::1;:21;::::0;;;;11331:28:::1;11295:21:::0;11331:14:::1;:28::i;:::-;11326:58;;11368:16;;-1:-1:-1::0;;;11368:16:42::1;;;;;;;;;;;11326:58;11398:21;::::0;::::1;::::0;::::1;;11394:44;;;11428:10;;-1:-1:-1::0;;;11428:10:42::1;;;;;;;;;;;11394:44;11519:19;::::0;::::1;::::0;;;::::1;;;11515:46;;;11540:21;11548:12;11540:7;:21::i;:::-;11648:50;11655:10;11667;11679:4;11685:12;11648:6;:50::i;12795:329::-:0;318:10:54;311:6;:18;;;;;;;;;;;333:1;311:23;307:46;;343:10;;-1:-1:-1;;;343:10:54;;;;;;;;;;;307:46;12859:33:42::1;12895:21:::0;;;:9:::1;:21;::::0;;;;12932:28:::1;12895:21:::0;12932:14:::1;:28::i;:::-;12927:58;;12969:16;;-1:-1:-1::0;;;12969:16:42::1;;;;;;;;;;;12927:58;12999:21;::::0;::::1;::::0;::::1;;12995:44;;;13029:10;;-1:-1:-1::0;;;13029:10:42::1;;;;;;;;;;;12995:44;13050:19;::::0;::::1;:26:::0;;-1:-1:-1;;13050:26:42::1;;;::::0;;13091::::1;::::0;13106:10;;13091:26:::1;::::0;13050;;13091::::1;12849:275;12795:329:::0;:::o;8858:131::-;8922:4;8960:21;;;:9;:21;;;;;8945:37;;:14;:37::i;5917:115::-;5973:4;6003:21;;;:9;:21;;;;;5996:29;;:6;:29::i;1081:142:53:-;1162:54;1197:5;1205:2;1209:6;1162:28;:54::i;:::-;1081:142;;;:::o;17522:764:42:-;17688:15;17766:48;;;17824:18;;;:25;;-1:-1:-1;;17824:25:42;;;;;17859:44;;;;17876:19;;;:27;;-1:-1:-1;;17876:27:42;;;17859:44;17977:261;18004:9;18027:16;18057:12;:26;;17977:261;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18097:12;:24;;;;;;;;;;-1:-1:-1;;;;;18097:24:42;18135:12;:19;;;18168:12;:25;;;18207:12;:21;;;17977:13;:261::i;:::-;18254:25;;18268:10;;18254:25;;;;;17651:635;17522:764;;;;:::o;335:253:51:-;461:12;513:13;528:18;;;;;;;;;;;;;-1:-1:-1;;;528:18:51;;;548:32;568:11;548:19;:32::i;:::-;496:85;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;489:92;;335:253;;;;:::o;20090:149:42:-;20172:4;20231:1;20195:12;:26;;:33;;;;;:::i;:::-;;;:37;20188:44;;20090:149;;;:::o;14024:744::-;14328:433;;;;;;;;14373:16;14328:433;;;;14411:6;14328:433;;;;14445:12;14328:433;;;;14481:8;14328:433;;;;14530:1;14328:433;;;;14555:5;14328:433;;;;;;14582:5;14328:433;;;;;;14608:5;14328:433;;;;;;14635:5;14328:433;;;;;;14667:11;-1:-1:-1;;;;;14328:433:42;;;;;14701:7;-1:-1:-1;;;;;14328:433:42;;;;;14737:13;14328:433;;;14304:9;:21;14314:10;14304:21;;;;;;;;;;;:457;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14304:457:42;;;;;-1:-1:-1;;;;;14304:457:42;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14304:457:42;;;;;-1:-1:-1;;;;;14304:457:42;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;14024:744:42:o;15421:1929::-;15671:10;;15667:624;;-1:-1:-1;;;;;15856:26:42;;15877:4;15856:26;15852:145;;15902:80;15936:11;15949:9;15968:4;15975:6;15902:33;:80::i;:::-;16093:71;;-1:-1:-1;;;16093:71:42;;16131:4;16093:71;;;21713:34:64;-1:-1:-1;;;;;16146:16:42;21783:15:64;;21763:18;;;21756:43;16167:6:42;;16093:29;;;;;;21648:18:64;;16093:71:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:80;16089:192;;;16193:73;;-1:-1:-1;;;16193:73:42;;-1:-1:-1;;;;;16229:16:42;22191:32:64;;16193:73:42;;;22173:51:64;-1:-1:-1;;22240:18:64;;;22233:34;16193:27:42;;;;;22146:18:64;;16193:73:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16089:192;16358:135;;-1:-1:-1;;;16358:135:42;;-1:-1:-1;;;;;16358:16:42;:29;;;;:135;;-1:-1:-1;;;16401:20:42;16423:16;;16441:13;;16463:11;;16477:6;;16358:135;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16555:85:42;;-1:-1:-1;;;16555:85:42;;-1:-1:-1;;;;;16555:16:42;:30;;;;:85;;-1:-1:-1;;;16586:20:42;16608:16;;16626:13;;16555:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16707:301:42;;-1:-1:-1;;;16707:301:42;;-1:-1:-1;;;;;16707:16:42;:29;;-1:-1:-1;16707:29:42;;-1:-1:-1;16707:301:42;;-1:-1:-1;;;16750:20:42;16784:16;;16814:13;;16841:5;;16900:4;;16841:5;;16707:301;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17104:1;17097:4;:8;17093:99;;;17107:85;;-1:-1:-1;;;17107:85:42;;-1:-1:-1;;;;;17107:16:42;:24;;;;:85;;-1:-1:-1;;;17132:20:42;17154:16;;17172:13;;17187:4;;17107:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17093:99;17206:12;;17202:142;;17234:99;;-1:-1:-1;;;17234:99:42;;-1:-1:-1;;;;;17234:16:42;:34;;;;:99;;-1:-1:-1;;;17269:20:42;17291:16;;17309:13;;17324:8;;17234:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17202:142;15421:1929;;;;;;;:::o;19494:250::-;19670:29;;19594:143;;-1:-1:-1;;;19594:143:42;;19571:4;;-1:-1:-1;;;;;19594:16:42;:25;;;;:143;;19641:4;;-1:-1:-1;;;19648:20:42;19701:26;;;;19594:143;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;20359:833::-;20508:16;;;20522:1;20508:16;;;20423;20508;;;;;20423;20481:24;;20508:16;20522:1;20508:16;;;;;;;;;;-1:-1:-1;;20481:43:42;-1:-1:-1;20579:10:42;;;;;:32;;;20593:5;20602:9;20593:18;;20579:32;:52;;;;;20615:5;20624:7;20615:16;;20579:52;20575:81;;;20640:16;;-1:-1:-1;;;20640:16:42;;;;;;;;;;;20575:81;20671:5;20680:1;20671:10;20667:495;;20756:1;20743:7;20751:1;20743:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;20784:1;20771:7;20779:1;20771:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;20667:495;;;20806:5;20815:9;20806:18;20802:360;;21002:1;20989:7;20997:1;20989:10;;;;;;;;:::i;20802:360::-;21122:1;21109:7;21117:1;21109:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;21150:1;21137:7;21145:1;21137:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;21178:7;20359:833;-1:-1:-1;;20359:833:42:o;18470:1018::-;18684:29;;18614:137;;-1:-1:-1;;;18614:137:42;;18599:12;;-1:-1:-1;;;;;18614:16:42;:34;;;;:137;;-1:-1:-1;;;18662:20:42;18684:29;18715:26;;;;18614:137;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18599:152;-1:-1:-1;;;;18832:5:42;:23;18828:89;;18864:53;18879:4;18886:10;18898:4;18904:12;18864:6;:53::i;18828:89::-;18957:21;;;:28;;-1:-1:-1;;18957:28:42;18981:4;18957:28;;;;;19168:19;;;18957:28;19168:19;19164:46;;;19189:21;19197:12;19189:7;:21::i;:::-;19276:24;19303;19321:5;19303:17;:24::i;:::-;19383:38;;-1:-1:-1;;;19383:38:42;;19276:51;;-1:-1:-1;;;;;;19383:3:42;:17;;;;:38;;19401:10;;19276:51;;19383:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19466:5;19454:10;19437:44;19473:7;19437:44;;;;;;:::i;:::-;;;;;;;;18552:936;;18470:1018;;:::o;21296:153::-;21376:4;21399:43;21434:7;;21399:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21399:34:42;;-1:-1:-1;;;21399:43:42:i;:::-;21392:50;21296:153;-1:-1:-1;;;21296:153:42:o;19750:178::-;19853:24;;;;19879:20;;;;;19901:19;;;19828:93;;-1:-1:-1;;;;;19853:24:42;;;;;;;19879:20;;19828:24;:93::i;:::-;19750:178;:::o;13738:280::-;13812:4;13833:28;13848:12;13833:14;:28::i;:::-;13828:47;;-1:-1:-1;13870:5:42;;13738:280;-1:-1:-1;13738:280:42:o;13828:47::-;13889:19;;;;;;;;;13885:37;;;-1:-1:-1;13917:5:42;;13738:280;-1:-1:-1;13738:280:42:o;13885:37::-;13936:21;;;;;;13932:39;;;-1:-1:-1;13966:5:42;;13738:280;-1:-1:-1;13738:280:42:o;13932:39::-;13988:23;13998:12;13988:9;:23::i;2864:1456:36:-;2976:12;3103:4;3097:11;-1:-1:-1;;;3226:17:36;3219:93;3359:2;3355:1;3336:17;3332:25;3325:37;3439:6;3434:2;3415:17;3411:26;3404:42;4241:2;4238:1;4234:2;4215:17;4212:1;4205:5;4198;4193:51;3762:16;3755:24;3749:2;3731:16;3728:24;3724:1;3720;3714:8;3711:15;3707:46;3704:76;3504:754;3493:765;;;4286:7;4278:35;;;;-1:-1:-1;;;4278:35:36;;25337:2:64;4278:35:36;;;25319:21:64;25376:2;25356:18;;;25349:30;-1:-1:-1;;;25395:18:64;;;25388:45;25450:18;;4278:35:36;;;;;;;;977:240:51;1043:12;1104:51;-1:-1:-1;;;;;1125:29:51;;;;;1104:20;:51::i;:::-;1164:35;1193:4;1185:13;;1164:35;;;:20;:35::i;:::-;1074:136;;;;;;;;25634:19:64;;;-1:-1:-1;;;;;;25683:41:64;25678:2;25669:12;;25662:63;25750:2;25741:12;;25479:280;1074:136:51;;;;;;;;;;;;;1067:143;;977:240;;;:::o;618:175:53:-;722:64;761:5;769:4;775:2;779:6;722:32;:64::i;88:512:52:-;165:4;185:7;:14;203:1;185:19;181:37;;-1:-1:-1;213:5:52;;88:512;-1:-1:-1;88:512:52:o;181:37::-;337:7;345:1;337:10;;;;;;;;:::i;:::-;;;;;;;351:1;337:15;336:57;;;;;358:7;366:1;358:10;;;;;;;;:::i;:::-;;;;;;;372:1;358:15;:34;;;;377:7;385:1;377:10;;;;;;;;:::i;:::-;;;;;;;391:1;377:15;358:34;332:99;;;-1:-1:-1;416:4:52;;88:512;-1:-1:-1;88:512:52:o;332:99::-;497:7;505:1;497:10;;;;;;;;:::i;:::-;;;;;;;511:1;497:15;496:38;;;;;518:7;526:1;518:10;;;;;;;;:::i;:::-;;;;;;;532:1;518:15;496:38;492:80;;;-1:-1:-1;557:4:52;;88:512;-1:-1:-1;88:512:52:o;492:80::-;-1:-1:-1;588:5:52;;88:512;-1:-1:-1;88:512:52:o;1434:1317:51:-;1503:7;1546:9;1566:7;1558:16;;1546:28;;1626:1;-1:-1:-1;;;;;1626:70:51;1622:74;;1720:1;1724:7;1720:11;1715:1;:17;1736:66;1714:88;1710:92;;1826:1;1830:7;1826:11;1821:1;:17;1842:66;1820:88;1816:92;;1932:1;1936:7;1932:11;1927:1;:17;1948:66;1926:88;1922:92;;2038:1;2042:6;2038:10;2033:1;:16;2053:66;2032:87;2028:91;;2143:1;2147:6;2143:10;2138:1;:16;2158:66;2137:87;2133:91;;2265:9;2352:1;2278;2282:66;2278:70;2277:76;;;;;:::i;:::-;;2454:1;2384:66;2380:70;;2379:76;2556:1;2486:66;2482:70;;2481:76;2585:5;2580:11;2595:4;2579:20;2575:24;;;2602:66;2575:93;;;-1:-1:-1;;;1434:1317:51:o;1285:1573:36:-;1423:12;1550:4;1544:11;-1:-1:-1;;;1673:17:36;1666:93;1806:4;1802:1;1783:17;1779:25;1772:39;1890:2;1885;1866:17;1862:26;1855:38;1970:6;1965:2;1946:17;1942:26;1935:42;2774:2;2771:1;2766:3;2747:17;2744:1;2737:5;2730;2725:52;2293:16;2286:24;2280:2;2262:16;2259:24;2255:1;2251;2245:8;2242:15;2238:46;2235:76;2035:756;2024:767;;;2819:7;2811:40;;;;-1:-1:-1;;;2811:40:36;;26098:2:64;2811:40:36;;;26080:21:64;26137:2;26117:18;;;26110:30;-1:-1:-1;;;26156:18:64;;;26149:50;26216:18;;2811:40:36;25896:344:64;2811:40:36;1413:1445;1285:1573;;;;:::o;14:127:64:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;213:2;207:9;255:6;243:19;;292:18;277:34;;313:22;;;274:62;271:88;;;339:18;;:::i;:::-;375:2;368:22;146:250;:::o;401:718::-;443:5;496:3;489:4;481:6;477:17;473:27;463:55;;514:1;511;504:12;463:55;550:6;537:20;576:18;613:2;609;606:10;603:36;;;619:18;;:::i;:::-;694:2;688:9;662:2;748:13;;-1:-1:-1;;744:22:64;;;768:2;740:31;736:40;724:53;;;792:18;;;812:22;;;789:46;786:72;;;838:18;;:::i;:::-;878:10;874:2;867:22;913:2;905:6;898:18;959:3;952:4;947:2;939:6;935:15;931:26;928:35;925:55;;;976:1;973;966:12;925:55;1040:2;1033:4;1025:6;1021:17;1014:4;1006:6;1002:17;989:54;1087:1;1080:4;1075:2;1067:6;1063:15;1059:26;1052:37;1107:6;1098:15;;;;;;401:718;;;;:::o;1124:388::-;1201:6;1209;1262:2;1250:9;1241:7;1237:23;1233:32;1230:52;;;1278:1;1275;1268:12;1230:52;1314:9;1301:23;1291:33;;1375:2;1364:9;1360:18;1347:32;1402:18;1394:6;1391:30;1388:50;;;1434:1;1431;1424:12;1388:50;1457:49;1498:7;1489:6;1478:9;1474:22;1457:49;:::i;:::-;1447:59;;;1124:388;;;;;:::o;1517:525::-;1612:6;1620;1628;1636;1689:3;1677:9;1668:7;1664:23;1660:33;1657:53;;;1706:1;1703;1696:12;1657:53;1742:9;1729:23;1719:33;;1799:2;1788:9;1784:18;1771:32;1761:42;;1854:2;1843:9;1839:18;1826:32;1881:18;1873:6;1870:30;1867:50;;;1913:1;1910;1903:12;1867:50;1936:49;1977:7;1968:6;1957:9;1953:22;1936:49;:::i;:::-;1517:525;;;;-1:-1:-1;1926:59:64;;2032:2;2017:18;2004:32;;-1:-1:-1;;;1517:525:64:o;2047:131::-;-1:-1:-1;;;;;2122:31:64;;2112:42;;2102:70;;2168:1;2165;2158:12;2183:247;2242:6;2295:2;2283:9;2274:7;2270:23;2266:32;2263:52;;;2311:1;2308;2301:12;2263:52;2350:9;2337:23;2369:31;2394:5;2369:31;:::i;2435:661::-;2539:6;2547;2555;2563;2571;2624:3;2612:9;2603:7;2599:23;2595:33;2592:53;;;2641:1;2638;2631:12;2592:53;2681:9;2668:23;2714:18;2706:6;2703:30;2700:50;;;2746:1;2743;2736:12;2700:50;2769:49;2810:7;2801:6;2790:9;2786:22;2769:49;:::i;:::-;2759:59;;;2868:2;2857:9;2853:18;2840:32;2881:31;2906:5;2881:31;:::i;:::-;2435:661;;2931:5;;-1:-1:-1;;;;2983:2:64;2968:18;;2955:32;;3034:2;3019:18;;3006:32;;3085:3;3070:19;;;3057:33;;-1:-1:-1;2435:661:64:o;4226:180::-;4285:6;4338:2;4326:9;4317:7;4313:23;4309:32;4306:52;;;4354:1;4351;4344:12;4306:52;-1:-1:-1;4377:23:64;;4226:180;-1:-1:-1;4226:180:64:o;4411:435::-;4464:3;4502:5;4496:12;4529:6;4524:3;4517:19;4555:4;4584:2;4579:3;4575:12;4568:19;;4621:2;4614:5;4610:14;4642:1;4652:169;4666:6;4663:1;4660:13;4652:169;;;4727:13;;4715:26;;4761:12;;;;4796:15;;;;4688:1;4681:9;4652:169;;;-1:-1:-1;4837:3:64;;4411:435;-1:-1:-1;;;;;4411:435:64:o;4851:261::-;5030:2;5019:9;5012:21;4993:4;5050:56;5102:2;5091:9;5087:18;5079:6;5050:56;:::i;5117:315::-;5185:6;5193;5246:2;5234:9;5225:7;5221:23;5217:32;5214:52;;;5262:1;5259;5252:12;5214:52;5298:9;5285:23;5275:33;;5358:2;5347:9;5343:18;5330:32;5371:31;5396:5;5371:31;:::i;:::-;5421:5;5411:15;;;5117:315;;;;;:::o;5437:258::-;5509:1;5519:113;5533:6;5530:1;5527:13;5519:113;;;5609:11;;;5603:18;5590:11;;;5583:39;5555:2;5548:10;5519:113;;;5650:6;5647:1;5644:13;5641:48;;;-1:-1:-1;;5685:1:64;5667:16;;5660:27;5437:258::o;5700:257::-;5741:3;5779:5;5773:12;5806:6;5801:3;5794:19;5822:63;5878:6;5871:4;5866:3;5862:14;5855:4;5848:5;5844:16;5822:63;:::i;:::-;5939:2;5918:15;-1:-1:-1;;5914:29:64;5905:39;;;;5946:4;5901:50;;5700:257;-1:-1:-1;;5700:257:64:o;5962:262::-;6060:5;6054:12;6049:3;6042:25;6024:3;6113:4;6106:5;6102:16;6096:23;6151:4;6144;6139:3;6135:14;6128:28;6172:46;6212:4;6207:3;6203:14;6189:12;6172:46;:::i;6229:879::-;6447:4;6476:2;6516;6505:9;6501:18;6546:2;6535:9;6528:21;6569:6;6604;6598:13;6635:6;6627;6620:22;6673:2;6662:9;6658:18;6651:25;;6735:2;6725:6;6722:1;6718:14;6707:9;6703:30;6699:39;6685:53;;6773:2;6765:6;6761:15;6794:1;6804:275;6818:6;6815:1;6812:13;6804:275;;;6911:2;6907:7;6895:9;6887:6;6883:22;6879:36;6874:3;6867:49;6939:60;6992:6;6983;6977:13;6939:60;:::i;:::-;6929:70;-1:-1:-1;7057:12:64;;;;7022:15;;;;6840:1;6833:9;6804:275;;;-1:-1:-1;7096:6:64;;6229:879;-1:-1:-1;;;;;;;6229:879:64:o;7222:1449::-;7413:2;7402:9;7395:21;7458:6;7452:13;7447:2;7436:9;7432:18;7425:41;7520:2;7512:6;7508:15;7502:22;7497:2;7486:9;7482:18;7475:50;7579:2;7571:6;7567:15;7561:22;7556:2;7545:9;7541:18;7534:50;7639:2;7631:6;7627:15;7621:22;7615:3;7604:9;7600:19;7593:51;7699:3;7691:6;7687:16;7681:23;7675:3;7664:9;7660:19;7653:52;7376:4;7752:3;7744:6;7740:16;7734:23;7766:50;7811:3;7800:9;7796:19;7782:12;3826:13;3819:21;3807:34;;3756:91;7766:50;-1:-1:-1;7865:3:64;7853:16;;7847:23;3826:13;;3819:21;7926:3;7911:19;;3807:34;7879:52;7980:3;7972:6;7968:16;7962:23;8004:3;8016:51;8063:2;8052:9;8048:18;8032:14;3826:13;3819:21;3807:34;;3756:91;8016:51;8104:15;;8098:22;;-1:-1:-1;8139:3:64;8151:51;8183:18;;;8098:22;3826:13;3819:21;3807:34;;3756:91;8151:51;8239:15;;8233:22;;-1:-1:-1;8274:3:64;8286:54;8321:18;;;8233:22;-1:-1:-1;;;;;7179:31:64;7167:44;;7113:104;8286:54;8377:15;;8371:22;;-1:-1:-1;8412:3:64;8424:54;8459:18;;;8371:22;-1:-1:-1;;;;;7179:31:64;7167:44;;7113:104;8424:54;8515:15;;8509:22;8550:6;8572:18;;;8565:30;8509:22;-1:-1:-1;8612:53:64;8660:3;8645:19;;8509:22;8612:53;:::i;8676:683::-;8771:6;8779;8787;8840:2;8828:9;8819:7;8815:23;8811:32;8808:52;;;8856:1;8853;8846:12;8808:52;8892:9;8879:23;8869:33;;8953:2;8942:9;8938:18;8925:32;8976:18;9017:2;9009:6;9006:14;9003:34;;;9033:1;9030;9023:12;9003:34;9071:6;9060:9;9056:22;9046:32;;9116:7;9109:4;9105:2;9101:13;9097:27;9087:55;;9138:1;9135;9128:12;9087:55;9178:2;9165:16;9204:2;9196:6;9193:14;9190:34;;;9220:1;9217;9210:12;9190:34;9273:7;9268:2;9258:6;9255:1;9251:14;9247:2;9243:23;9239:32;9236:45;9233:65;;;9294:1;9291;9284:12;9233:65;9325:2;9321;9317:11;9307:21;;9347:6;9337:16;;;;;8676:683;;;;;:::o;9364:248::-;9432:6;9440;9493:2;9481:9;9472:7;9468:23;9464:32;9461:52;;;9509:1;9506;9499:12;9461:52;-1:-1:-1;;9532:23:64;;;9602:2;9587:18;;;9574:32;;-1:-1:-1;9364:248:64:o;9617:288::-;9792:6;9781:9;9774:25;9835:2;9830;9819:9;9815:18;9808:30;9755:4;9855:44;9895:2;9884:9;9880:18;9872:6;9855:44;:::i;9910:1110::-;10347:25;;;10403:2;10388:18;;10381:34;;;10446:2;10431:18;;10424:34;;;10489:2;10474:18;;10467:34;;;10532:3;10517:19;;10510:35;;;10589:14;;10582:22;10576:3;10561:19;;10554:51;10649:14;;10642:22;10636:3;10621:19;;10614:51;10709:14;;10702:22;10696:3;10681:19;;10674:51;10769:14;;10762:22;10756:3;10741:19;;10734:51;-1:-1:-1;;;;;10822:32:64;;;10816:3;10801:19;;10794:61;7179:31;;10907:3;10892:19;;7167:44;10306:4;10335:3;10949:2;10943:3;10932:9;10928:19;10921:31;10969:45;11010:2;10999:9;10995:18;10986:7;10969:45;:::i;:::-;10961:53;9910:1110;-1:-1:-1;;;;;;;;;;;;;;;9910:1110:64:o;11025:296::-;11230:2;11219:9;11212:21;11193:4;11250:65;11311:2;11300:9;11296:18;11288:6;11250:65;:::i;11840:380::-;11919:1;11915:12;;;;11962;;;11983:61;;12037:4;12029:6;12025:17;12015:27;;11983:61;12090:2;12082:6;12079:14;12059:18;12056:38;12053:161;;12136:10;12131:3;12127:20;12124:1;12117:31;12171:4;12168:1;12161:15;12199:4;12196:1;12189:15;12053:161;;11840:380;;;:::o;12350:544::-;12451:2;12446:3;12443:11;12440:448;;;12487:1;12512:5;12508:2;12501:17;12557:4;12553:2;12543:19;12627:2;12615:10;12611:19;12608:1;12604:27;12598:4;12594:38;12663:4;12651:10;12648:20;12645:47;;;-1:-1:-1;12686:4:64;12645:47;12741:2;12736:3;12732:12;12729:1;12725:20;12719:4;12715:31;12705:41;;12796:82;12814:2;12807:5;12804:13;12796:82;;;12859:17;;;12840:1;12829:13;12796:82;;13070:1348;13194:3;13188:10;13221:18;13213:6;13210:30;13207:56;;;13243:18;;:::i;:::-;13272:96;13361:6;13321:38;13353:4;13347:11;13321:38;:::i;:::-;13315:4;13272:96;:::i;:::-;13423:4;;13487:2;13476:14;;13504:1;13499:662;;;;14205:1;14222:6;14219:89;;;-1:-1:-1;14274:19:64;;;14268:26;14219:89;-1:-1:-1;;13027:1:64;13023:11;;;13019:24;13015:29;13005:40;13051:1;13047:11;;;13002:57;14321:81;;13469:943;;13499:662;12297:1;12290:14;;;12334:4;12321:18;;-1:-1:-1;;13535:20:64;;;13652:236;13666:7;13663:1;13660:14;13652:236;;;13755:19;;;13749:26;13734:42;;13847:27;;;;13815:1;13803:14;;;;13682:19;;13652:236;;;13656:3;13916:6;13907:7;13904:19;13901:201;;;13977:19;;;13971:26;-1:-1:-1;;14060:1:64;14056:14;;;14072:3;14052:24;14048:37;14044:42;14029:58;14014:74;;13901:201;-1:-1:-1;;;;;14148:1:64;14132:14;;;14128:22;14115:36;;-1:-1:-1;13070:1348:64:o;14423:217::-;14570:2;14559:9;14552:21;14533:4;14590:44;14630:2;14619:9;14615:18;14607:6;14590:44;:::i;14853:164::-;14929:13;;14978;;14971:21;14961:32;;14951:60;;15007:1;15004;14997:12;14951:60;14853:164;;;:::o;15022:202::-;15089:6;15142:2;15130:9;15121:7;15117:23;15113:32;15110:52;;;15158:1;15155;15148:12;15110:52;15181:37;15208:9;15181:37;:::i;15587:458::-;15818:3;15807:9;15800:22;15781:4;15839:45;15879:3;15868:9;15864:19;15856:6;15839:45;:::i;:::-;-1:-1:-1;;;;;15920:32:64;;;;15915:2;15900:18;;15893:60;-1:-1:-1;15984:2:64;15969:18;;15962:34;;;;16027:2;16012:18;;;16005:34;15831:53;15587:458;-1:-1:-1;15587:458:64:o;16050:771::-;16099:3;16140:5;16134:12;16169:36;16195:9;16169:36;:::i;:::-;16214:19;;;16252:4;16275:1;16292:18;;;16319:146;;;;16479:1;16474:341;;;;16285:530;;16319:146;-1:-1:-1;;16361:24:64;;16347:12;;;16340:46;16433:14;;16426:22;16423:1;16419:30;16410:40;;16406:49;;;-1:-1:-1;16319:146:64;;16474:341;16505:5;16502:1;16495:16;16552:2;16549:1;16539:16;16577:1;16591:174;16605:6;16602:1;16599:13;16591:174;;;16692:14;;16674:11;;;16670:20;;16663:44;16735:16;;;;16620:10;;16591:174;;;16789:11;;16785:20;;;-1:-1:-1;;16285:530:64;;;;;;16050:771;;;;:::o;16826:463::-;17083:1;17079;17074:3;17070:11;17066:19;17058:6;17054:32;17043:9;17036:51;17123:6;17118:2;17107:9;17103:18;17096:34;17166:6;17161:2;17150:9;17146:18;17139:34;17209:3;17204:2;17193:9;17189:18;17182:31;17017:4;17230:53;17278:3;17267:9;17263:19;17255:6;17230:53;:::i;:::-;17222:61;16826:463;-1:-1:-1;;;;;;16826:463:64:o;17294:138::-;17373:13;;17395:31;17373:13;17395:31;:::i;17437:883::-;17510:5;17558:4;17546:9;17541:3;17537:19;17533:30;17530:50;;;17576:1;17573;17566:12;17530:50;17609:2;17603:9;17651:4;17643:6;17639:17;17722:6;17710:10;17707:22;17686:18;17674:10;17671:34;17668:62;17665:88;;;17733:18;;:::i;:::-;17769:2;17762:22;17802:6;-1:-1:-1;17802:6:64;17832:37;17859:9;17832:37;:::i;:::-;17824:6;17817:53;17903:46;17945:2;17934:9;17930:18;17903:46;:::i;:::-;17898:2;17890:6;17886:15;17879:71;17983:46;18025:2;18014:9;18010:18;17983:46;:::i;:::-;17978:2;17970:6;17966:15;17959:71;18063:46;18105:2;18094:9;18090:18;18063:46;:::i;:::-;18058:2;18050:6;18046:15;18039:71;18144:47;18186:3;18175:9;18171:19;18144:47;:::i;:::-;18138:3;18130:6;18126:16;18119:73;18247:3;18236:9;18232:19;18226:26;18220:3;18212:6;18208:16;18201:52;18308:3;18297:9;18293:19;18287:26;18281:3;18273:6;18269:16;18262:52;;17437:883;;;;:::o;18325:963::-;18421:6;18474:3;18462:9;18453:7;18449:23;18445:33;18442:53;;;18491:1;18488;18481:12;18442:53;18517:17;;:::i;:::-;18557:40;18587:9;18557:40;:::i;:::-;18550:5;18543:55;18630:49;18675:2;18664:9;18660:18;18630:49;:::i;:::-;18625:2;18618:5;18614:14;18607:73;18712:49;18757:2;18746:9;18742:18;18712:49;:::i;:::-;18707:2;18700:5;18696:14;18689:73;18794:46;18836:2;18825:9;18821:18;18794:46;:::i;:::-;18789:2;18782:5;18778:14;18771:70;18874:74;18940:7;18934:3;18923:9;18919:19;18874:74;:::i;:::-;18868:3;18857:15;;18850:99;19004:3;18989:19;;18983:26;18976:4;18965:16;;18958:52;19065:3;19050:19;;19044:26;-1:-1:-1;19026:16:64;;19019:52;19126:3;19111:19;;19105:26;19098:4;19087:16;;19080:52;19189:3;19174:19;;19168:26;19159:6;19148:18;;19141:54;19252:3;19237:19;;;19231:26;19222:6;19211:18;;19204:54;-1:-1:-1;18861:5:64;18325:963;-1:-1:-1;18325:963:64:o;19293:127::-;19354:10;19349:3;19345:20;19342:1;19335:31;19385:4;19382:1;19375:15;19409:4;19406:1;19399:15;19425:128;19465:3;19496:1;19492:6;19489:1;19486:13;19483:39;;;19502:18;;:::i;:::-;-1:-1:-1;19538:9:64;;19425:128::o;19558:354::-;19646:19;;;19628:3;-1:-1:-1;;;;;19677:31:64;;19674:51;;;19721:1;19718;19711:12;19674:51;19757:6;19754:1;19750:14;19809:8;19802:5;19795:4;19790:3;19786:14;19773:45;19886:1;19841:18;;19861:4;19837:29;19875:13;;;-1:-1:-1;19837:29:64;;19558:354;-1:-1:-1;;19558:354:64:o;19917:359::-;20134:6;20123:9;20116:25;20177:2;20172;20161:9;20157:18;20150:30;20097:4;20197:73;20266:2;20255:9;20251:18;20243:6;20235;20197:73;:::i;:::-;20189:81;19917:359;-1:-1:-1;;;;;19917:359:64:o;20281:288::-;20470:2;20459:9;20452:21;20433:4;20490:73;20559:2;20548:9;20544:18;20536:6;20528;20490:73;:::i;20574:125::-;20614:4;20642:1;20639;20636:8;20633:34;;;20647:18;;:::i;:::-;-1:-1:-1;20684:9:64;;20574:125::o;20704:127::-;20765:10;20760:3;20756:20;20753:1;20746:31;20796:4;20793:1;20786:15;20820:4;20817:1;20810:15;20836:660;21059:3;21097:6;21091:13;21113:53;21159:6;21154:3;21147:4;21139:6;21135:17;21113:53;:::i;:::-;21229:13;;21188:16;;;;21251:57;21229:13;21188:16;21285:4;21273:17;;21251:57;:::i;:::-;21375:13;;21330:20;;;21397:57;21375:13;21330:20;21431:4;21419:17;;21397:57;:::i;:::-;21470:20;;20836:660;-1:-1:-1;;;;;20836:660:64:o;21810:184::-;21880:6;21933:2;21921:9;21912:7;21908:23;21904:32;21901:52;;;21949:1;21946;21939:12;21901:52;-1:-1:-1;21972:16:64;;21810:184;-1:-1:-1;21810:184:64:o;22278:546::-;22553:6;22542:9;22535:25;22596:6;22591:2;22580:9;22576:18;22569:34;22639:3;22634:2;22623:9;22619:18;22612:31;22516:4;22660:45;22700:3;22689:9;22685:19;22677:6;22660:45;:::i;:::-;-1:-1:-1;;;;;22741:32:64;;;;22736:2;22721:18;;22714:60;-1:-1:-1;22805:3:64;22790:19;22783:35;22652:53;22278:546;-1:-1:-1;;;22278:546:64:o;22829:359::-;23032:6;23021:9;23014:25;23075:6;23070:2;23059:9;23055:18;23048:34;23118:2;23113;23102:9;23098:18;23091:30;22995:4;23138:44;23178:2;23167:9;23163:18;23155:6;23138:44;:::i;23193:606::-;23462:6;23451:9;23444:25;23505:6;23500:2;23489:9;23485:18;23478:34;23548:3;23543:2;23532:9;23528:18;23521:31;23425:4;23569:45;23609:3;23598:9;23594:19;23586:6;23569:45;:::i;:::-;23657:14;;23650:22;23645:2;23630:18;;23623:50;-1:-1:-1;23717:14:64;;23710:22;23704:3;23689:19;;23682:51;23777:14;23770:22;23764:3;23749:19;;;23742:51;23561:53;23193:606;-1:-1:-1;;;23193:606:64:o;23804:432::-;24035:6;24024:9;24017:25;24078:6;24073:2;24062:9;24058:18;24051:34;24121:3;24116:2;24105:9;24101:18;24094:31;23998:4;24142:45;24182:3;24171:9;24167:19;24159:6;24142:45;:::i;:::-;24134:53;;24223:6;24218:2;24207:9;24203:18;24196:34;23804:432;;;;;;;:::o;24241:364::-;24441:6;24430:9;24423:25;24484:6;24479:2;24468:9;24464:18;24457:34;24527:2;24522;24511:9;24507:18;24500:30;24404:4;24547:52;24595:2;24584:9;24580:18;24572:6;24547:52;:::i;24798:332::-;25005:6;24994:9;24987:25;25048:2;25043;25032:9;25028:18;25021:30;24968:4;25068:56;25120:2;25109:9;25105:18;25097:6;25068:56;:::i;25764:127::-;25825:10;25820:3;25816:20;25813:1;25806:31;25856:4;25853:1;25846:15;25880:4;25877:1;25870:15",
    "linkReferences": {},
    "immutableReferences": {
      "46483": [
        { "start": 644, "length": 32 },
        { "start": 2169, "length": 32 },
        { "start": 4514, "length": 32 },
        { "start": 8871, "length": 32 }
      ],
      "46487": [
        { "start": 581, "length": 32 },
        { "start": 1478, "length": 32 },
        { "start": 2727, "length": 32 },
        { "start": 7040, "length": 32 },
        { "start": 7187, "length": 32 },
        { "start": 7337, "length": 32 },
        { "start": 7507, "length": 32 },
        { "start": 7653, "length": 32 },
        { "start": 7820, "length": 32 },
        { "start": 7995, "length": 32 },
        { "start": 8155, "length": 32 },
        { "start": 8623, "length": 32 }
      ],
      "46491": [
        { "start": 1163, "length": 32 },
        { "start": 1850, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_ANCILLARY_DATA()": "27f8feac",
    "SAFETY_PERIOD()": "d1dfb2e9",
    "YES_OR_NO_IDENTIFIER()": "6c66f07d",
    "addAdmin(address)": "70480275",
    "admins(address)": "429b62e5",
    "collateralWhitelist()": "e4ee614a",
    "ctf()": "22a9339f",
    "flag(bytes32)": "78165a48",
    "getExpectedPayouts(bytes32)": "34e5e28e",
    "getLatestUpdate(bytes32,address)": "c0cab0a2",
    "getQuestion(bytes32)": "58c039cd",
    "getUpdates(bytes32,address)": "555c56fc",
    "initialize(bytes,address,uint256,uint256,uint256)": "185d1646",
    "isAdmin(address)": "24d7806c",
    "isFlagged(bytes32)": "bf2dde38",
    "isInitialized(bytes32)": "f7b637bb",
    "optimisticOracle()": "22302922",
    "pause(bytes32)": "ed56531a",
    "postUpdate(bytes32,bytes)": "072d1259",
    "priceDisputed(bytes32,uint256,bytes,uint256)": "0d8f2372",
    "questions(bytes32)": "95addb90",
    "ready(bytes32)": "fcac49a2",
    "removeAdmin(address)": "1785f53c",
    "renounceAdmin()": "8bad0c0a",
    "reset(bytes32)": "ed3c7d40",
    "resolve(bytes32)": "5c23bdf5",
    "resolveManually(bytes32,uint256[])": "80696d85",
    "unflag(bytes32)": "88697de4",
    "unpause(bytes32)": "2f4dae9f",
    "updates(bytes32,uint256)": "89ab0871"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ctf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Flagged\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAncillaryData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOOPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayouts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFlagged\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOptimisticOracle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotReadyToResolve\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Paused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Resolved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafetyPeriodNotPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafetyPeriodPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"update\",\"type\":\"bytes\"}],\"name\":\"AncillaryDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdminAddress\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"QuestionFlagged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalBond\",\"type\":\"uint256\"}],\"name\":\"QuestionInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"payouts\",\"type\":\"uint256[]\"}],\"name\":\"QuestionManuallyResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"QuestionPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"QuestionReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"settledPrice\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"payouts\",\"type\":\"uint256[]\"}],\"name\":\"QuestionResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"QuestionUnflagged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"QuestionUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAdmin\",\"type\":\"address\"}],\"name\":\"RemovedAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_ANCILLARY_DATA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SAFETY_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"YES_OR_NO_IDENTIFIER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralWhitelist\",\"outputs\":[{\"internalType\":\"contract IAddressWhitelist\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ctf\",\"outputs\":[{\"internalType\":\"contract IConditionalTokens\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"flag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"getExpectedPayouts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getLatestUpdate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"update\",\"type\":\"bytes\"}],\"internalType\":\"struct AncillaryDataUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"getQuestion\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalBond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liveness\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"manualResolutionTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reset\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refund\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"internalType\":\"struct QuestionData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"update\",\"type\":\"bytes\"}],\"internalType\":\"struct AncillaryDataUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalBond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liveness\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"isFlagged\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimisticOracle\",\"outputs\":[{\"internalType\":\"contract IOptimisticOracleV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"update\",\"type\":\"bytes\"}],\"name\":\"postUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceDisputed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"questions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalBond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liveness\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"manualResolutionTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reset\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refund\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"ready\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"resolve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"payouts\",\"type\":\"uint256[]\"}],\"name\":\"resolveManually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"unflag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"updates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"update\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"params\":{\"admin\":\"- The address of the admin\"}},\"constructor\":{\"params\":{\"_ctf\":\"- The Conditional Token Framework Address                 - When deployed for negative risk markets, this should be the `NegRiskOperator` contract address\",\"_finder\":\"- The UMA Finder contract address\",\"_oo\":\"- The Optimistic Oracle contract address\"}},\"flag(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID of the question\"}},\"getExpectedPayouts(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID of the question\"}},\"getLatestUpdate(bytes32,address)\":{\"params\":{\"owner\":\"- The address of the question initializer\",\"questionID\":\"- The unique questionID\"}},\"getQuestion(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID\"}},\"getUpdates(bytes32,address)\":{\"params\":{\"owner\":\"- The address of the question initializer\",\"questionID\":\"- The unique questionID\"}},\"initialize(bytes,address,uint256,uint256,uint256)\":{\"params\":{\"ancillaryData\":\"- Data used to resolve a question\",\"liveness\":\"- OO liveness period in seconds.                         If 0, the default liveness period of 2 hours is used.                        Must be chosen carefully, depending on the value backed by the question.                        Questions expected to secure a large amount of value should consider a longer liveness period.\",\"proposalBond\":\"- Bond required to be posted by OO proposers/disputers.                        If 0, the default OO bond is used.                        Must be chosen carefully, to properly economically incentize OO proposers and disputers.                        Questions expected to secure a large amount of value should consider a larger proposal bond. \",\"reward\":\"- Reward offered to a successful OO proposer.                         Must be chosen carefully, to properly economically incentize OO proposers.\",\"rewardToken\":\"- ERC20 token address used for payment of rewards and fees\"}},\"isAdmin(address)\":{\"params\":{\"addr\":\"- The address to be checked\"}},\"isFlagged(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID\"}},\"isInitialized(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID\"}},\"pause(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID of the question\"}},\"postUpdate(bytes32,bytes)\":{\"params\":{\"questionID\":\"- The unique questionID\",\"update\":\"- The update for the question\"}},\"priceDisputed(bytes32,uint256,bytes,uint256)\":{\"params\":{\"ancillaryData\":\"- Ancillary data of the request\"}},\"ready(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID\"}},\"removeAdmin(address)\":{\"params\":{\"admin\":\"- The address of the admin to be removed\"}},\"reset(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID\"}},\"resolve(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID of the question\"}},\"resolveManually(bytes32,uint256[])\":{\"params\":{\"payouts\":\"- Array of position payouts for the referenced question\",\"questionID\":\"- The unique questionID of the question\"}},\"unflag(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID of the question\"}},\"unpause(bytes32)\":{\"params\":{\"questionID\":\"- The unique questionID of the question\"}}},\"title\":\"UmaCtfAdapter\",\"version\":1},\"userdoc\":{\"events\":{\"AncillaryDataUpdated(bytes32,address,bytes)\":{\"notice\":\"Emitted when an ancillary data update is posted\"},\"NewAdmin(address,address)\":{\"notice\":\"Emitted when a new admin is added\"},\"QuestionFlagged(bytes32)\":{\"notice\":\"Emitted when a question is flagged by an admin for manual resolution\"},\"QuestionInitialized(bytes32,uint256,address,bytes,address,uint256,uint256)\":{\"notice\":\"Emitted when a questionID is initialized\"},\"QuestionManuallyResolved(bytes32,uint256[])\":{\"notice\":\"Emitted when a question is manually resolved\"},\"QuestionPaused(bytes32)\":{\"notice\":\"Emitted when a question is paused by an authorized user\"},\"QuestionReset(bytes32)\":{\"notice\":\"Emitted when a question is reset\"},\"QuestionResolved(bytes32,int256,uint256[])\":{\"notice\":\"Emitted when a question is resolved\"},\"QuestionUnflagged(bytes32)\":{\"notice\":\"Emitted when a question is unflagged by an admin\"},\"QuestionUnpaused(bytes32)\":{\"notice\":\"Emitted when a question is unpaused by an authorized user\"},\"RemovedAdmin(address,address)\":{\"notice\":\"Emitted when an admin is removed\"}},\"kind\":\"user\",\"methods\":{\"MAX_ANCILLARY_DATA()\":{\"notice\":\"Maximum ancillary data length From OOV2 function OO_ANCILLARY_DATA_LIMIT\"},\"SAFETY_PERIOD()\":{\"notice\":\"Time period after which an admin can manually resolve a condition\"},\"YES_OR_NO_IDENTIFIER()\":{\"notice\":\"Unique query identifier for the Optimistic Oracle From UMIP-107\"},\"addAdmin(address)\":{\"notice\":\"Adds an Admin\"},\"admins(address)\":{\"notice\":\"Auth\"},\"collateralWhitelist()\":{\"notice\":\"Collateral Whitelist\"},\"ctf()\":{\"notice\":\"Conditional Tokens Framework\"},\"flag(bytes32)\":{\"notice\":\"Flags a market for manual resolution\"},\"getExpectedPayouts(bytes32)\":{\"notice\":\"Retrieves the expected payout array of the question\"},\"getLatestUpdate(bytes32,address)\":{\"notice\":\"Gets the latest update for a questionID and owner\"},\"getQuestion(bytes32)\":{\"notice\":\"Gets the QuestionData for the given questionID\"},\"getUpdates(bytes32,address)\":{\"notice\":\"Gets all updates for a questionID and owner\"},\"initialize(bytes,address,uint256,uint256,uint256)\":{\"notice\":\"Initializes a question Atomically adds the question to the Adapter, prepares it on the ConditionalTokens Framework and requests a price from the OO. If a reward is provided, the caller must have approved the Adapter as spender and have enough rewardToken to pay for the price request. Prepares the condition using the Adapter as the oracle and a fixed outcome slot count = 2.\"},\"isAdmin(address)\":{\"notice\":\"Checks if an address is an admin\"},\"isFlagged(bytes32)\":{\"notice\":\"Checks if a question has been flagged for manual resolution\"},\"isInitialized(bytes32)\":{\"notice\":\"Checks if a question is initialized\"},\"optimisticOracle()\":{\"notice\":\"Optimistic Oracle\"},\"pause(bytes32)\":{\"notice\":\"Allows an admin to pause market resolution\"},\"postUpdate(bytes32,bytes)\":{\"notice\":\"Post an update for the question Anyone can post an update for any questionID, but users should only consider updates posted by the question creator\"},\"priceDisputed(bytes32,uint256,bytes,uint256)\":{\"notice\":\"Callback which is executed on dispute Resets the question and sends out a new price request to the OO\"},\"questions(bytes32)\":{\"notice\":\"Mapping of questionID to QuestionData\"},\"ready(bytes32)\":{\"notice\":\"Checks whether a questionID is ready to be resolved\"},\"removeAdmin(address)\":{\"notice\":\"Removes an admin\"},\"renounceAdmin()\":{\"notice\":\"Renounces Admin privileges from the caller\"},\"reset(bytes32)\":{\"notice\":\"Allows an admin to reset a question, sending out a new price request to the OO. Failsafe to be used if the priceDisputed callback reverts during execution.\"},\"resolve(bytes32)\":{\"notice\":\"Resolves a question Pulls price information from the OO and resolves the underlying CTF market. Reverts if price is not available on the OO Resets the question if the price returned by the OO is the Ignore price\"},\"resolveManually(bytes32,uint256[])\":{\"notice\":\"Allows an admin to resolve a CTF market manually\"},\"unflag(bytes32)\":{\"notice\":\"Unflags a market for manual resolution\"},\"unpause(bytes32)\":{\"notice\":\"Allows an admin to unpause market resolution\"},\"updates(bytes32,uint256)\":{\"notice\":\"Mapping to an array of Ancillary data updates for questions\"}},\"notice\":\"Enables resolution of Polymarket CTF markets via UMA's Optimistic Oracle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/uma-ctf-adapter/src/UmaCtfAdapter.sol\":\"UmaCtfAdapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/uma-ctf-adapter/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/uma-ctf-adapter/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/uma-ctf-adapter/lib/openzeppelin-contracts/\",\":solmate/=lib/uma-ctf-adapter/lib/solmate/src/\",\":uma-ctf-adapter/=lib/uma-ctf-adapter/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"lib/uma-ctf-adapter/src/UmaCtfAdapter.sol\":{\"keccak256\":\"0xa787e4bb2158163abeaec3f193f03786ab94e7ba58faa388f6df0463fa90cfbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://194c845c336f067bf656328e06f467a6ee51ce26deb22dc2a1bbec8b459fd9f6\",\"dweb:/ipfs/QmPZeSSsgXb81HzyXGnXfkjRaen9mkvkkaF1YK67J1TDNs\"]},\"lib/uma-ctf-adapter/src/interfaces/IAddressWhitelist.sol\":{\"keccak256\":\"0x23f8bedfe4c958a39af189bd54f34ff37c3269b800343b82489ad4911aaf52c7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c45c04f7c70f795cf531b424a95aab81ce6e9cfb017e7cf1444e5c40d0ebc617\",\"dweb:/ipfs/QmSBupDCR7dLTRUV212p4DSYBuMDGhTLZtqfkJDGTVva7B\"]},\"lib/uma-ctf-adapter/src/interfaces/IAuth.sol\":{\"keccak256\":\"0x9eac09c54c2e3133c5968e11f14e67f8242dfb62e104ca4e9e91201c7cc92c49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28edac4236be7a1b5a0108f8faa174b4e59087017866f4013783da7f2f8b4daa\",\"dweb:/ipfs/QmcxoBCWNcA7G2JY1gVkXzjSVGFzqkzoGgrmjBoMxX5vad\"]},\"lib/uma-ctf-adapter/src/interfaces/IConditionalTokens.sol\":{\"keccak256\":\"0xb1b734788224a5b0404ca316a6d2a3c63756eb5828c66a8b68d6303ab21c2b88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://906e64f1cbc70c983115527e8c7fc4c81b19beaae2557a878099b4bdc32c8102\",\"dweb:/ipfs/QmRuEwx2dP1Z9GX9QFv5LVX2UxUvw1nSPDy8ubcoK5fJhu\"]},\"lib/uma-ctf-adapter/src/interfaces/IFinder.sol\":{\"keccak256\":\"0x136e238a05caba2eb2ca12e4dd0a34d8a0338525b91c8ecc89e58b894f82c483\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c345192142ff24e0ab8d8f2c2565ecf3e9808e69d100b7b93a38533f4ccea565\",\"dweb:/ipfs/QmZvrh4VFW28tuJGS7VJd6vZizabfRnwy8Ygb55yABxanL\"]},\"lib/uma-ctf-adapter/src/interfaces/IOptimisticOracleV2.sol\":{\"keccak256\":\"0xd053315050236c368c22b354eef1e607c3c8e6278a6e8c6f9c51ec0d3df234bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea1de0ce27bdf0bf56a7e6732c8eb4bbe3c79e39d3b6898d78decbabcfd2db\",\"dweb:/ipfs/QmShPd5TVZ3r5y5EW2gZFSpryx2fSbYmANUQME4h2242VA\"]},\"lib/uma-ctf-adapter/src/interfaces/IOptimisticRequester.sol\":{\"keccak256\":\"0xeced6286e10a659e1aef1f2ada876c1026ba0a153d403cec5ad9460707dbb38d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5756911d40d80a926a48960f2ddc4c338aaaaeded7bed23fce80b91afa2d104b\",\"dweb:/ipfs/Qmef2A3BdpeD9Nj9TSMJJpVstKZ47R57gpS1CezjNP5ZC5\"]},\"lib/uma-ctf-adapter/src/interfaces/IUmaCtfAdapter.sol\":{\"keccak256\":\"0xda8de406c80ea903f0bfdcfd7aa333a412589615631b9a7590cef09c94977c5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bee4992dd1d0b6d990c090ec0499124c4f8a579527d19333d76a8feafd91d9c4\",\"dweb:/ipfs/QmTAEt23ZvbC1rBciwdnS2WZA6q7X7qp7XmQHCBB8quA9m\"]},\"lib/uma-ctf-adapter/src/libraries/AncillaryDataLib.sol\":{\"keccak256\":\"0xc68e2f88a4e62b6a69e4eb37b4091ac18292a37266557fd52d2b1a6d40952b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60942d2669cf185af3b190ad527a2a6d0a36e912b7dc529312e1b490209070f9\",\"dweb:/ipfs/QmcZedVSkpGDi6dyXLAoVh97dCKLn6MkjEbLDBEySvUTEC\"]},\"lib/uma-ctf-adapter/src/libraries/PayoutHelperLib.sol\":{\"keccak256\":\"0x2d50b718b7f33c4911993f55f8c61befc1f4e59e4a16bbac48efdd2654a3f21e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21d215293e7c5288158b10539f9675e2a0910d9f2937087282b692414831c704\",\"dweb:/ipfs/QmYoiah4LUM5zHknxNXiuTaZA1d2tswRQpUvHDrhhsfXbW\"]},\"lib/uma-ctf-adapter/src/libraries/TransferHelper.sol\":{\"keccak256\":\"0x54a48a7e4c340123286b26e868ef700d098d9ca1c30faaee0c47725f45cb0623\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13f0920ce37b841007860b270f579a69a5fed4f39e6679dee3c8d3b23e98b122\",\"dweb:/ipfs/QmPyQ3sej95cwaZYQGaPMpnVdMYfAUpgpBbJ8nyqw5NJcs\"]},\"lib/uma-ctf-adapter/src/mixins/Auth.sol\":{\"keccak256\":\"0x4952f4e099d5068482ec3668e47662f9a10884beb74e78d15799d4a012d1af48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e3580afafe9d4bf1cfa65e70be1384288c190d72a9c7d8897c58710029b682f\",\"dweb:/ipfs/QmXD5PjnGQp36184uDqDej7JZmWwwZjkcfCJxPHXpvqADU\"]},\"lib/uma-ctf-adapter/src/mixins/BulletinBoard.sol\":{\"keccak256\":\"0xf3fd332872717329784f81cdc2c75692ce53b96043c246d836f3991cdc1684a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1702707a0efbbcc131a6b6d463b3c38017cb5db396a3346d8409e62d8ebb843\",\"dweb:/ipfs/QmavHsbgxdm5Arv9pfmi42tCJv12RW7JLTtvvMLMjFsdKb\"]},\"src/interfaces/IBulletinBoard.sol\":{\"keccak256\":\"0xbb8613376337bf7fcf011535ed1a17b326092c0e77c105f8eea4eacfdcbf342d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc2a32dcf039cb2a3a835307e747c53f5e84ca51dc6239c4ac7cc6d8c6a11fc3\",\"dweb:/ipfs/QmdsxyPS8Df35GsZXqxNsntpGQu1b4GTS1JLi1WNWhKUbP\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.15+commit.e14f2714" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "_ctf", "type": "address" },
            { "internalType": "address", "name": "_finder", "type": "address" },
            { "internalType": "address", "name": "_oo", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "Flagged" },
        { "inputs": [], "type": "error", "name": "Initialized" },
        { "inputs": [], "type": "error", "name": "InvalidAncillaryData" },
        { "inputs": [], "type": "error", "name": "InvalidOOPrice" },
        { "inputs": [], "type": "error", "name": "InvalidPayouts" },
        { "inputs": [], "type": "error", "name": "NotAdmin" },
        { "inputs": [], "type": "error", "name": "NotFlagged" },
        { "inputs": [], "type": "error", "name": "NotInitialized" },
        { "inputs": [], "type": "error", "name": "NotOptimisticOracle" },
        { "inputs": [], "type": "error", "name": "NotReadyToResolve" },
        { "inputs": [], "type": "error", "name": "Paused" },
        { "inputs": [], "type": "error", "name": "PriceNotAvailable" },
        { "inputs": [], "type": "error", "name": "Resolved" },
        { "inputs": [], "type": "error", "name": "SafetyPeriodNotPassed" },
        { "inputs": [], "type": "error", "name": "SafetyPeriodPassed" },
        { "inputs": [], "type": "error", "name": "UnsupportedToken" },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32", "indexed": true },
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "bytes", "name": "update", "type": "bytes", "indexed": false }
          ],
          "type": "event",
          "name": "AncillaryDataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            {
              "internalType": "address",
              "name": "newAdminAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "QuestionFlagged",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32", "indexed": true },
            {
              "internalType": "uint256",
              "name": "requestTimestamp",
              "type": "uint256",
              "indexed": true
            },
            { "internalType": "address", "name": "creator", "type": "address", "indexed": true },
            { "internalType": "bytes", "name": "ancillaryData", "type": "bytes", "indexed": false },
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address",
              "indexed": false
            },
            { "internalType": "uint256", "name": "reward", "type": "uint256", "indexed": false },
            {
              "internalType": "uint256",
              "name": "proposalBond",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "QuestionInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32", "indexed": true },
            {
              "internalType": "uint256[]",
              "name": "payouts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "QuestionManuallyResolved",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "QuestionPaused",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "QuestionReset",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32", "indexed": true },
            { "internalType": "int256", "name": "settledPrice", "type": "int256", "indexed": true },
            {
              "internalType": "uint256[]",
              "name": "payouts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "QuestionResolved",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "QuestionUnflagged",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "QuestionUnpaused",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            {
              "internalType": "address",
              "name": "removedAdmin",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemovedAdmin",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_ANCILLARY_DATA",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SAFETY_PERIOD",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "YES_OR_NO_IDENTIFIER",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "admin", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAdmin"
        },
        {
          "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "admins",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralWhitelist",
          "outputs": [
            { "internalType": "contract IAddressWhitelist", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ctf",
          "outputs": [
            { "internalType": "contract IConditionalTokens", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flag"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getExpectedPayouts",
          "outputs": [{ "internalType": "uint256[]", "name": "", "type": "uint256[]" }]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestUpdate",
          "outputs": [
            {
              "internalType": "struct AncillaryDataUpdate",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "timestamp", "type": "uint256" },
                { "internalType": "bytes", "name": "update", "type": "bytes" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getQuestion",
          "outputs": [
            {
              "internalType": "struct QuestionData",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "requestTimestamp", "type": "uint256" },
                { "internalType": "uint256", "name": "reward", "type": "uint256" },
                { "internalType": "uint256", "name": "proposalBond", "type": "uint256" },
                { "internalType": "uint256", "name": "liveness", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "manualResolutionTimestamp",
                  "type": "uint256"
                },
                { "internalType": "bool", "name": "resolved", "type": "bool" },
                { "internalType": "bool", "name": "paused", "type": "bool" },
                { "internalType": "bool", "name": "reset", "type": "bool" },
                { "internalType": "bool", "name": "refund", "type": "bool" },
                { "internalType": "address", "name": "rewardToken", "type": "address" },
                { "internalType": "address", "name": "creator", "type": "address" },
                { "internalType": "bytes", "name": "ancillaryData", "type": "bytes" }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUpdates",
          "outputs": [
            {
              "internalType": "struct AncillaryDataUpdate[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint256", "name": "timestamp", "type": "uint256" },
                { "internalType": "bytes", "name": "update", "type": "bytes" }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "ancillaryData", "type": "bytes" },
            { "internalType": "address", "name": "rewardToken", "type": "address" },
            { "internalType": "uint256", "name": "reward", "type": "uint256" },
            { "internalType": "uint256", "name": "proposalBond", "type": "uint256" },
            { "internalType": "uint256", "name": "liveness", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "addr", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isAdmin",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isFlagged",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isInitialized",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "optimisticOracle",
          "outputs": [
            { "internalType": "contract IOptimisticOracleV2", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32" },
            { "internalType": "bytes", "name": "update", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postUpdate"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "bytes", "name": "ancillaryData", "type": "bytes" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "priceDisputed"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "questions",
          "outputs": [
            { "internalType": "uint256", "name": "requestTimestamp", "type": "uint256" },
            { "internalType": "uint256", "name": "reward", "type": "uint256" },
            { "internalType": "uint256", "name": "proposalBond", "type": "uint256" },
            { "internalType": "uint256", "name": "liveness", "type": "uint256" },
            { "internalType": "uint256", "name": "manualResolutionTimestamp", "type": "uint256" },
            { "internalType": "bool", "name": "resolved", "type": "bool" },
            { "internalType": "bool", "name": "paused", "type": "bool" },
            { "internalType": "bool", "name": "reset", "type": "bool" },
            { "internalType": "bool", "name": "refund", "type": "bool" },
            { "internalType": "address", "name": "rewardToken", "type": "address" },
            { "internalType": "address", "name": "creator", "type": "address" },
            { "internalType": "bytes", "name": "ancillaryData", "type": "bytes" }
          ]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "ready",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "admin", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceAdmin"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reset"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resolve"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "questionID", "type": "bytes32" },
            { "internalType": "uint256[]", "name": "payouts", "type": "uint256[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resolveManually"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unflag"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "questionID", "type": "bytes32" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "updates",
          "outputs": [
            { "internalType": "uint256", "name": "timestamp", "type": "uint256" },
            { "internalType": "bytes", "name": "update", "type": "bytes" }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addAdmin(address)": { "params": { "admin": "- The address of the admin" } },
          "constructor": {
            "params": {
              "_ctf": "- The Conditional Token Framework Address                 - When deployed for negative risk markets, this should be the `NegRiskOperator` contract address",
              "_finder": "- The UMA Finder contract address",
              "_oo": "- The Optimistic Oracle contract address"
            }
          },
          "flag(bytes32)": {
            "params": { "questionID": "- The unique questionID of the question" }
          },
          "getExpectedPayouts(bytes32)": {
            "params": { "questionID": "- The unique questionID of the question" }
          },
          "getLatestUpdate(bytes32,address)": {
            "params": {
              "owner": "- The address of the question initializer",
              "questionID": "- The unique questionID"
            }
          },
          "getQuestion(bytes32)": { "params": { "questionID": "- The unique questionID" } },
          "getUpdates(bytes32,address)": {
            "params": {
              "owner": "- The address of the question initializer",
              "questionID": "- The unique questionID"
            }
          },
          "initialize(bytes,address,uint256,uint256,uint256)": {
            "params": {
              "ancillaryData": "- Data used to resolve a question",
              "liveness": "- OO liveness period in seconds.                         If 0, the default liveness period of 2 hours is used.                        Must be chosen carefully, depending on the value backed by the question.                        Questions expected to secure a large amount of value should consider a longer liveness period.",
              "proposalBond": "- Bond required to be posted by OO proposers/disputers.                        If 0, the default OO bond is used.                        Must be chosen carefully, to properly economically incentize OO proposers and disputers.                        Questions expected to secure a large amount of value should consider a larger proposal bond. ",
              "reward": "- Reward offered to a successful OO proposer.                         Must be chosen carefully, to properly economically incentize OO proposers.",
              "rewardToken": "- ERC20 token address used for payment of rewards and fees"
            }
          },
          "isAdmin(address)": { "params": { "addr": "- The address to be checked" } },
          "isFlagged(bytes32)": { "params": { "questionID": "- The unique questionID" } },
          "isInitialized(bytes32)": { "params": { "questionID": "- The unique questionID" } },
          "pause(bytes32)": {
            "params": { "questionID": "- The unique questionID of the question" }
          },
          "postUpdate(bytes32,bytes)": {
            "params": {
              "questionID": "- The unique questionID",
              "update": "- The update for the question"
            }
          },
          "priceDisputed(bytes32,uint256,bytes,uint256)": {
            "params": { "ancillaryData": "- Ancillary data of the request" }
          },
          "ready(bytes32)": { "params": { "questionID": "- The unique questionID" } },
          "removeAdmin(address)": {
            "params": { "admin": "- The address of the admin to be removed" }
          },
          "reset(bytes32)": { "params": { "questionID": "- The unique questionID" } },
          "resolve(bytes32)": {
            "params": { "questionID": "- The unique questionID of the question" }
          },
          "resolveManually(bytes32,uint256[])": {
            "params": {
              "payouts": "- Array of position payouts for the referenced question",
              "questionID": "- The unique questionID of the question"
            }
          },
          "unflag(bytes32)": {
            "params": { "questionID": "- The unique questionID of the question" }
          },
          "unpause(bytes32)": {
            "params": { "questionID": "- The unique questionID of the question" }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_ANCILLARY_DATA()": {
            "notice": "Maximum ancillary data length From OOV2 function OO_ANCILLARY_DATA_LIMIT"
          },
          "SAFETY_PERIOD()": {
            "notice": "Time period after which an admin can manually resolve a condition"
          },
          "YES_OR_NO_IDENTIFIER()": {
            "notice": "Unique query identifier for the Optimistic Oracle From UMIP-107"
          },
          "addAdmin(address)": { "notice": "Adds an Admin" },
          "admins(address)": { "notice": "Auth" },
          "collateralWhitelist()": { "notice": "Collateral Whitelist" },
          "ctf()": { "notice": "Conditional Tokens Framework" },
          "flag(bytes32)": { "notice": "Flags a market for manual resolution" },
          "getExpectedPayouts(bytes32)": {
            "notice": "Retrieves the expected payout array of the question"
          },
          "getLatestUpdate(bytes32,address)": {
            "notice": "Gets the latest update for a questionID and owner"
          },
          "getQuestion(bytes32)": { "notice": "Gets the QuestionData for the given questionID" },
          "getUpdates(bytes32,address)": {
            "notice": "Gets all updates for a questionID and owner"
          },
          "initialize(bytes,address,uint256,uint256,uint256)": {
            "notice": "Initializes a question Atomically adds the question to the Adapter, prepares it on the ConditionalTokens Framework and requests a price from the OO. If a reward is provided, the caller must have approved the Adapter as spender and have enough rewardToken to pay for the price request. Prepares the condition using the Adapter as the oracle and a fixed outcome slot count = 2."
          },
          "isAdmin(address)": { "notice": "Checks if an address is an admin" },
          "isFlagged(bytes32)": {
            "notice": "Checks if a question has been flagged for manual resolution"
          },
          "isInitialized(bytes32)": { "notice": "Checks if a question is initialized" },
          "optimisticOracle()": { "notice": "Optimistic Oracle" },
          "pause(bytes32)": { "notice": "Allows an admin to pause market resolution" },
          "postUpdate(bytes32,bytes)": {
            "notice": "Post an update for the question Anyone can post an update for any questionID, but users should only consider updates posted by the question creator"
          },
          "priceDisputed(bytes32,uint256,bytes,uint256)": {
            "notice": "Callback which is executed on dispute Resets the question and sends out a new price request to the OO"
          },
          "questions(bytes32)": { "notice": "Mapping of questionID to QuestionData" },
          "ready(bytes32)": { "notice": "Checks whether a questionID is ready to be resolved" },
          "removeAdmin(address)": { "notice": "Removes an admin" },
          "renounceAdmin()": { "notice": "Renounces Admin privileges from the caller" },
          "reset(bytes32)": {
            "notice": "Allows an admin to reset a question, sending out a new price request to the OO. Failsafe to be used if the priceDisputed callback reverts during execution."
          },
          "resolve(bytes32)": {
            "notice": "Resolves a question Pulls price information from the OO and resolves the underlying CTF market. Reverts if price is not available on the OO Resets the question if the price returned by the OO is the Ignore price"
          },
          "resolveManually(bytes32,uint256[])": {
            "notice": "Allows an admin to resolve a CTF market manually"
          },
          "unflag(bytes32)": { "notice": "Unflags a market for manual resolution" },
          "unpause(bytes32)": { "notice": "Allows an admin to unpause market resolution" },
          "updates(bytes32,uint256)": {
            "notice": "Mapping to an array of Ancillary data updates for questions"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/uma-ctf-adapter/lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/uma-ctf-adapter/lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/uma-ctf-adapter/lib/openzeppelin-contracts/",
        "solmate/=lib/uma-ctf-adapter/lib/solmate/src/",
        "uma-ctf-adapter/=lib/uma-ctf-adapter/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "lib/uma-ctf-adapter/src/UmaCtfAdapter.sol": "UmaCtfAdapter" },
      "evmVersion": "london",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/uma-ctf-adapter/src/UmaCtfAdapter.sol": {
        "keccak256": "0xa787e4bb2158163abeaec3f193f03786ab94e7ba58faa388f6df0463fa90cfbb",
        "urls": [
          "bzz-raw://194c845c336f067bf656328e06f467a6ee51ce26deb22dc2a1bbec8b459fd9f6",
          "dweb:/ipfs/QmPZeSSsgXb81HzyXGnXfkjRaen9mkvkkaF1YK67J1TDNs"
        ],
        "license": "MIT"
      },
      "lib/uma-ctf-adapter/src/interfaces/IAddressWhitelist.sol": {
        "keccak256": "0x23f8bedfe4c958a39af189bd54f34ff37c3269b800343b82489ad4911aaf52c7",
        "urls": [
          "bzz-raw://c45c04f7c70f795cf531b424a95aab81ce6e9cfb017e7cf1444e5c40d0ebc617",
          "dweb:/ipfs/QmSBupDCR7dLTRUV212p4DSYBuMDGhTLZtqfkJDGTVva7B"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/uma-ctf-adapter/src/interfaces/IAuth.sol": {
        "keccak256": "0x9eac09c54c2e3133c5968e11f14e67f8242dfb62e104ca4e9e91201c7cc92c49",
        "urls": [
          "bzz-raw://28edac4236be7a1b5a0108f8faa174b4e59087017866f4013783da7f2f8b4daa",
          "dweb:/ipfs/QmcxoBCWNcA7G2JY1gVkXzjSVGFzqkzoGgrmjBoMxX5vad"
        ],
        "license": "MIT"
      },
      "lib/uma-ctf-adapter/src/interfaces/IConditionalTokens.sol": {
        "keccak256": "0xb1b734788224a5b0404ca316a6d2a3c63756eb5828c66a8b68d6303ab21c2b88",
        "urls": [
          "bzz-raw://906e64f1cbc70c983115527e8c7fc4c81b19beaae2557a878099b4bdc32c8102",
          "dweb:/ipfs/QmRuEwx2dP1Z9GX9QFv5LVX2UxUvw1nSPDy8ubcoK5fJhu"
        ],
        "license": "MIT"
      },
      "lib/uma-ctf-adapter/src/interfaces/IFinder.sol": {
        "keccak256": "0x136e238a05caba2eb2ca12e4dd0a34d8a0338525b91c8ecc89e58b894f82c483",
        "urls": [
          "bzz-raw://c345192142ff24e0ab8d8f2c2565ecf3e9808e69d100b7b93a38533f4ccea565",
          "dweb:/ipfs/QmZvrh4VFW28tuJGS7VJd6vZizabfRnwy8Ygb55yABxanL"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/uma-ctf-adapter/src/interfaces/IOptimisticOracleV2.sol": {
        "keccak256": "0xd053315050236c368c22b354eef1e607c3c8e6278a6e8c6f9c51ec0d3df234bb",
        "urls": [
          "bzz-raw://c9ea1de0ce27bdf0bf56a7e6732c8eb4bbe3c79e39d3b6898d78decbabcfd2db",
          "dweb:/ipfs/QmShPd5TVZ3r5y5EW2gZFSpryx2fSbYmANUQME4h2242VA"
        ],
        "license": "MIT"
      },
      "lib/uma-ctf-adapter/src/interfaces/IOptimisticRequester.sol": {
        "keccak256": "0xeced6286e10a659e1aef1f2ada876c1026ba0a153d403cec5ad9460707dbb38d",
        "urls": [
          "bzz-raw://5756911d40d80a926a48960f2ddc4c338aaaaeded7bed23fce80b91afa2d104b",
          "dweb:/ipfs/Qmef2A3BdpeD9Nj9TSMJJpVstKZ47R57gpS1CezjNP5ZC5"
        ],
        "license": "MIT"
      },
      "lib/uma-ctf-adapter/src/interfaces/IUmaCtfAdapter.sol": {
        "keccak256": "0xda8de406c80ea903f0bfdcfd7aa333a412589615631b9a7590cef09c94977c5a",
        "urls": [
          "bzz-raw://bee4992dd1d0b6d990c090ec0499124c4f8a579527d19333d76a8feafd91d9c4",
          "dweb:/ipfs/QmTAEt23ZvbC1rBciwdnS2WZA6q7X7qp7XmQHCBB8quA9m"
        ],
        "license": "MIT"
      },
      "lib/uma-ctf-adapter/src/libraries/AncillaryDataLib.sol": {
        "keccak256": "0xc68e2f88a4e62b6a69e4eb37b4091ac18292a37266557fd52d2b1a6d40952b9a",
        "urls": [
          "bzz-raw://60942d2669cf185af3b190ad527a2a6d0a36e912b7dc529312e1b490209070f9",
          "dweb:/ipfs/QmcZedVSkpGDi6dyXLAoVh97dCKLn6MkjEbLDBEySvUTEC"
        ],
        "license": "MIT"
      },
      "lib/uma-ctf-adapter/src/libraries/PayoutHelperLib.sol": {
        "keccak256": "0x2d50b718b7f33c4911993f55f8c61befc1f4e59e4a16bbac48efdd2654a3f21e",
        "urls": [
          "bzz-raw://21d215293e7c5288158b10539f9675e2a0910d9f2937087282b692414831c704",
          "dweb:/ipfs/QmYoiah4LUM5zHknxNXiuTaZA1d2tswRQpUvHDrhhsfXbW"
        ],
        "license": "MIT"
      },
      "lib/uma-ctf-adapter/src/libraries/TransferHelper.sol": {
        "keccak256": "0x54a48a7e4c340123286b26e868ef700d098d9ca1c30faaee0c47725f45cb0623",
        "urls": [
          "bzz-raw://13f0920ce37b841007860b270f579a69a5fed4f39e6679dee3c8d3b23e98b122",
          "dweb:/ipfs/QmPyQ3sej95cwaZYQGaPMpnVdMYfAUpgpBbJ8nyqw5NJcs"
        ],
        "license": "MIT"
      },
      "lib/uma-ctf-adapter/src/mixins/Auth.sol": {
        "keccak256": "0x4952f4e099d5068482ec3668e47662f9a10884beb74e78d15799d4a012d1af48",
        "urls": [
          "bzz-raw://1e3580afafe9d4bf1cfa65e70be1384288c190d72a9c7d8897c58710029b682f",
          "dweb:/ipfs/QmXD5PjnGQp36184uDqDej7JZmWwwZjkcfCJxPHXpvqADU"
        ],
        "license": "MIT"
      },
      "lib/uma-ctf-adapter/src/mixins/BulletinBoard.sol": {
        "keccak256": "0xf3fd332872717329784f81cdc2c75692ce53b96043c246d836f3991cdc1684a9",
        "urls": [
          "bzz-raw://b1702707a0efbbcc131a6b6d463b3c38017cb5db396a3346d8409e62d8ebb843",
          "dweb:/ipfs/QmavHsbgxdm5Arv9pfmi42tCJv12RW7JLTtvvMLMjFsdKb"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBulletinBoard.sol": {
        "keccak256": "0xbb8613376337bf7fcf011535ed1a17b326092c0e77c105f8eea4eacfdcbf342d",
        "urls": [
          "bzz-raw://cc2a32dcf039cb2a3a835307e747c53f5e84ca51dc6239c4ac7cc6d8c6a11fc3",
          "dweb:/ipfs/QmdsxyPS8Df35GsZXqxNsntpGQu1b4GTS1JLi1WNWhKUbP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 42
}
